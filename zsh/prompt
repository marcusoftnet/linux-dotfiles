function my_remote_status() {
  if [[ -n "$(command git show-ref origin/$(git_current_branch) 2> /dev/null)"  ]]; then
    echo "$(git_commits_ahead)$(git_commits_behind)"
  fi
}

# Adapted from git_prompt_info(): oh-my-zsh/lib/git.zsh
function my_git_prompt() {
  local ref
  if [[ "$(command git config --get oh-my-zsh.hide-status 2>/dev/null)" != "1" ]]; then
    ref=$(command git symbolic-ref HEAD 2> /dev/null) || \
    ref=$(command git rev-parse --short HEAD 2> /dev/null) || return 0
    echo "$ZSH_THEME_GIT_PROMPT_PREFIX$(git_current_branch)$(git_prompt_status)$ZSH_THEME_GIT_PROMPT_SUFFIX $(my_remote_status)"
  fi
}

ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg[white]%}["
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$fg[white]%}]%{$reset_color%}"

ZSH_THEME_GIT_COMMITS_AHEAD_PREFIX="%{$fg[magenta]%}↑"
ZSH_THEME_GIT_COMMITS_AHEAD_SUFFIX=" %{$reset_color%}"
ZSH_THEME_GIT_COMMITS_BEHIND_PREFIX="%{$fg[cyan]%}↓"
ZSH_THEME_GIT_COMMITS_BEHIND_SUFFIX=" %{$reset_color%}"

ZSH_THEME_GIT_PROMPT_ADDED="%{$fg[green]%}+"
ZSH_THEME_GIT_PROMPT_MODIFIED="%{$fg[red]%}*"
ZSH_THEME_GIT_PROMPT_DELETED="%{$fg[red]%}-"
ZSH_THEME_GIT_PROMPT_RENAMED="%{$fg[magenta]%}>"
ZSH_THEME_GIT_PROMPT_UNMERGED="%{$fg[yellow]%}ǁ"
ZSH_THEME_GIT_PROMPT_UNTRACKED="%{$fg[cyan]%}●"
ZSH_THEME_GIT_PROMPT_STASHED="%{$fg[yellow]%}⚑"
ZSH_THEME_GIT_PROMPT_SHA_BEFORE="%{$fg[green]%}"
ZSH_THEME_GIT_PROMPT_SHA_AFTER="%{$reset_color%}"

local timestamp='[%{$fg[yellow]%}%*%{$reset_color%}]'
local pwd='%{$fg[blue]%}%~%{$reset_color%}'
local git='$(my_git_prompt)$(git_prompt_short_sha)'

PROMPT="${timestamp} ${pwd} ${git}
%(?..%{$fg[red]%})%B$%b "
